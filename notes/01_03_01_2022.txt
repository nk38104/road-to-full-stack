-----------------------------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------- HTTP/HTTPS --------------------------------------------------------------------

    - Hyper Text Transfer Protocol / Secure

    - HTTP is a protocol for fetching resources such as HTML documents. t is the foundation of any data exchange on the Web and it is a 
      client-server protocol, which means requests are initiated by the recipient, usually the Web browser. 

    - It is an application layer protocol that is sent over TCP, or over a TLS-encrypted TCP connection, though any reliable transport protocol 
      could theoretically be used.

    ----------------
    -- HTTPS FLOW --
    ----------------
    
        - When a client wants to communicate with a server, either the final server or an intermediate proxy, it performs the following steps:
                            
                            1.  Open a TCP connection: The TCP connection is used to send a request, or several, and receive an answer.
                                The client may open a new connection, reuse an existing connection, or open several TCP connections to the servers.

                            2.  Send an HTTP message: HTTP messages (before HTTP/2) are human-readable. With HTTP/2, these simple messages are 
                                encapsulated in frames, making them impossible to read directly, but the principle remains the same.
                                For example:
                                    GET / HTTP/1.1
                                    Host: developer.mozilla.org
                                    Accept-Language: fr

                            3.  Read the response sent by the server, such as:
                                    HTTP/1.1 200 OK
                                    Date: Sat, 09 Oct 2010 14:28:02 GMT
                                    Server: Apache
                                    Last-Modified: Tue, 01 Dec 2009 20:18:22 GMT
                                    ETag: "51142bc1-7449-479b075b2891b"
                                    Accept-Ranges: bytes
                                    Content-Length: 29769
                                    Content-Type: text/html

                                    <!DOCTYPE html... (here come the 29769 bytes of the requested web page)
                            
                            4.  Close or reuse the connection for further requests.

        - If HTTP pipelining is activated, several requests can be sent without waiting for the first response to be fully received. HTTP 
          pipelining has proven difficult to implement in existing networks, where old pieces of software coexist with modern versions.
          HTTP pipelining has been superseded in HTTP/2 with more robust multiplexing requests within a frame.
    
    ---------------------
    -- REQUEST METHODS --
    ---------------------

        - HTTP defines a set of request methods to indicate the desired action to be performed for a given resource.

        - Most used req. methods are:
            
            1) GET      - requests a representation of the specified resource. Requests using GET should only retrieve data.
            2) POST     - submits an entity to the specified resource, often causing a change in state or side effects on the server.
            3) PUT      - replaces all current representations of the target resource with the request payload.
            4) DELETE   - deletes the specified resource.

        - Other methods:
            
            5) HEAD     - asks for a response identical to a GET request, but without the response body.
            6) CONNECT  - establishes a tunnel to the server identified by the target resource.
            7) OPTIONS  - describes the communication options for the target resource.
            8) TRACE    - performs a message loop-back test along the path to the target resource.
            9) PATCH    - applies partial modifications to a resource.

    --------------
    -- MESSAGES --
    --------------

        - HTTP messages are how data is exchanged between a server and a client. There are two types of messages: requests sent by the client to 
          trigger an action on the server, and responses, the answer from the server.

        - HTTP messages are composed of textual information encoded in ASCII, and span over multiple lines.

    - More on:
        - https://developer.mozilla.org/en-US/docs/Web/HTTP

-----------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------ JSON -----------------------------------------------------------------------

    - JSON (JavaScript Object Notation) is a lightweight data-interchange format. It is a text format that is completely language independent but 
      uses conventions that are familiar to programmers.

    - JSON is built on two structures:
        
        1) A collection of name/value pairs. In various languages, this is realized as an object, record, struct, dictionary, hash table, 
           keyed list, or associative array.
        2) An ordered list of values. In most languages, this is realized as an array, vector, list, or sequence.

    - In JSON, they take on these forms:
        
        1)  An object that is an unordered set of name/value pairs. It begins with {left brace and ends with }right brace.
            Each name is followed by :colon and the name/value pairs are separated by ,comma.

    - More on:
        - https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Objects/JSON
        - https://developers.squarespace.com/what-is-json

-----------------------------------------------------------------------------------------------------------------------------------------------------